
ref:
https://www.youtube.com/watch?v=hAAj27hgPFg&list=PLWgD0gfm500EMEDPyb3Orb28i7HK5_DkR&index=2&ab_channel=Maransatto


Neste documento estarei abordando explicaçoes do passo a passo pra a criação da API REst.


    Antes de tudo precisamos ter instalado na maquina o node , npm , vscode, docker, mysql,  e naturalmente o servidor do mysql , aqui na minha maquina estou usando o apache  e o git pois estaremos transformando está pasta em um repositorio do github.


agora vamos iniciaar oprojeto criando o arquivo package.json onde estará as dependecias do projeto.

    comando: npm init  ou npm init -y para noa fazer as perguntas.

vamos instalar o EXPRESS onde é uma bilbioteca do npm pois ela vamos utilizar para fazeras requisições HTTP do node.

    comando :  npm install --save express

Então será instalado o express como nossa dependencia do projeto e com express vem a pasta node_modules então precisamos criar um arquivo chamado .gitignore e nele precisamos incluir está pasta pois não queremos que está pastasuba para o nosso repositorio git


Agora vamos criar um arquivo chamado server.js

neste arquivo vamos criar um aconstante http e importar o monulo http

deposi criamos a portaque nosso servidor vai rodar  usamos a variavel de ambient com o codigo process.env.PORT ou se não ter nenhuma porta disponivel rodaremos  na porta 3000

depois criaremos outro arquivo app.js onde vamos importar o express para fazer as requisiçoes depois criaremos uma variavel app  e atribuimos uma extancia do express
e no arquivo  app  vamos exportar a variavel app pois nela esta o codigo da requisição http  onde estamos enviand o status 200 para mostrar que está tudo ok !!

 
Agora voltamos para o arquivo server.js  e criamos o nosso sservidor para isso criamos um avariavl chamada server atribuimos  o http.createserver(app) e como paramaetro para a função createserver passamos a nossa variavel app

depois colocamos o servidor para escutar a porta entaõ passamos a variavel port como parametro paraa função listen()

por isso do codigo server.listen(port) 





